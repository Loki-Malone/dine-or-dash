// Generated by CoffeeScript 2.5.1
(function() {
  // Initializing global variables
  var alias, geolocation, getCoordinates, getKeysAndLocation, getReviews, id, lat, long, maps, name_biz, nearbyRestaurants, picURL, pos, restDiv, restaurantPhotos, searchRestaurants, searchRestaurantsByID, sendInfo, yelp;

  alias = this;

  id = this;

  name_biz = this;

  picURL = this;

  restDiv = $(".restaurants");

  pos = this;

  yelp = this;

  maps = this;

  lat = this;

  long = this;

  // Searches restaurants based on the users entry
  searchRestaurants = function() {
    var city, offset;
    city = $("#city").val().trim();
    offset = Math.floor(Math.random() * 500);
    return $.ajax({
      url: `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?location=${city}&categories=restaurants&limit=1&offset=${offset}`,
      method: "GET",
      cache: true,
      headers: {
        "Authorization": yelp
      }
    }).then(function(res) {
      var dislikeBtn, likeBtn;
      console.log(res);
      name_biz = res.businesses[0].name;
      alias = res.businesses[0].alias;
      id = res.businesses[0].id;
      picURL = res.businesses[0].image_url;
      likeBtn = $("<button>").text("Dine!");
      dislikeBtn = $("<button>").text("Dash!");
      likeBtn.on("click", function() {
        return sendInfo();
      });
      dislikeBtn.on("click", function() {
        return searchRestaurants();
      });
      $("<h3>").text("Restaurant ID: " + id).appendTo(restDiv);
      $("<h3>").text("Restaurant alias: " + name_biz).appendTo(restDiv);
      likeBtn.appendTo(restDiv);
      dislikeBtn.appendTo(restDiv);
      restaurantPhotos();
      return getReviews();
    });
  };

  
  // Nearby restaurants search function
  nearbyRestaurants = function() {
    var offset;
    offset = Math.floor(Math.random() * 500);
    return $.ajax({
      url: `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?latitude=${lat}&longitude=${long}&categories=restaurants&limit=1&offset=${offset}`,
      method: "GET",
      cache: true,
      headers: {
        "Authorization": yelp
      }
    }).then(function(res) {
      var dislikeBtn, likeBtn;
      console.log(res);
      name_biz = res.businesses[0].name;
      alias = res.businesses[0].alias;
      id = res.businesses[0].id;
      picURL = res.businesses[0].image_url;
      likeBtn = $("<button>").text("Dine!");
      dislikeBtn = $("<button>").text("Dash!");
      likeBtn.on("click", function() {
        return sendInfo();
      });
      dislikeBtn.on("click", function() {
        return nearbyRestaurants();
      });
      $("<h3>").text("Restaurant ID: " + id).appendTo(restDiv);
      $("<h3>").text("Restaurant alias: " + name_biz).appendTo(restDiv);
      likeBtn.appendTo(restDiv);
      dislikeBtn.appendTo(restDiv);
      restaurantPhotos();
      return getReviews();
    });
  };

  
  // Returns a city by using the id stored in mysql. Will want to pull the id from within this function likely
  searchRestaurantsByID = function() {
    return $.ajax({
      url: `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${id}`,
      method: "GET",
      cache: true,
      headers: {
        "Authorization": yelp
      }
    }).then(function(res) {
      return console.log(res);
    });
  };

  
  // Gets photos of the restaurant
  restaurantPhotos = function() {
    return $.ajax({
      url: `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${alias}`,
      method: "GET",
      cache: true,
      headers: {
        "Authorization": yelp
      }
    }).then(function(res) {
      return console.log(res);
    });
  };

  // Gets reviews for the restaurant
  getReviews = function() {
    return $.ajax({
      url: `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${alias}/reviews`,
      method: "GET",
      cache: true,
      headers: {
        "Authorization": yelp
      }
    }).then(function(res) {
      return console.log(res);
    });
  };

  // Gets the users current location for use to display nearby options
  getCoordinates = function() {
    return navigator.geolocation.getCurrentPosition(function(position) {
      pos = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      lat = pos.lat;
      long = pos.lng;
      return $("#proximity").attr("disabled", false);
    });
  };

  // Sets up the ability to use geolocation from google maps
  geolocation = function() {
    return $.ajax({
      url: `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/js?key=${maps}`,
      cache: true,
      method: "GET"
    }).then(function(res) {
      return getCoordinates();
    });
  };

  // Sends the info to be saved to the database for future searches
  sendInfo = function() {
    var info;
    info = [];
    info.push(id);
    info.push(name_biz);
    info.push(picURL);
    return $.post("/api/restaurants", {
      id: `${id}`,
      name_biz: `${name_biz}`,
      picURL: `${picURL}`
    }).then(function(res) {
      return console.log(res);
    });
  };

  // Gets the keys from server side, and then user location
  getKeysAndLocation = function() {
    return $.get("/api/keys", function(res) {
      yelp = `${res[0]}`;
      maps = `${res[1]}`;
      return geolocation();
    });
  };

  $(document).ready(function() {
    // Runs immediately to have info available before they start searching, prevents sync timing errors
    getKeysAndLocation();
    $("#proximity").click(function(event) {
      return nearbyRestaurants();
    });
    return $("#search").click(function(event) {
      event.preventDefault();
      searchRestaurants();
      return $("#city").val("");
    });
  });

}).call(this);
