// Generated by CoffeeScript 2.5.1
(function() {
  // Initializing global variables
  var alias, city, cityCount, counter, delay, dislikedRestaurants, geoConfirm, geoID, geolocate, getCoordinates, getKeys, getReviews, id, lat, long, maps, name_biz, nearbyRestaurants, offset, picURL, pos, randomSelection, restDiv, restaurantArray, restaurantPhotos, searchRestaurants, searchRestaurantsByID, selection, sendInfo, setCity, yelp;

  alias = this;

  id = this;

  name_biz = this;

  picURL = this;

  restDiv = $(".restaurants");

  pos = this;

  yelp = this;

  maps = this;

  lat = this;

  long = this;

  city = this;

  cityCount = this;

  offset = 0;

  counter = 0;

  restaurantArray = [];

  geoConfirm = this;

  delay = function(ms, func) {
    return setTimeout(func, ms);
  };

  geoID = this;

  selection = this;

  // Searches restaurants based on the users entry
  searchRestaurants = function() {
    return $.ajax({
      url: `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?location=${city}&categories=restaurants&limit=50&offset=${offset}`,
      method: "GET",
      cache: true,
      headers: {
        "Authorization": yelp
      }
    }).then(function(res) {
      var count, dislikeBtn, likeBtn;
      console.log(restaurantArray);
      count = 0;
      while (count <= 50) {
        if (count === 50) {
          offset = offset + 50;
          return delay(1000, function() {
            return searchRestaurants();
          });
        } else {
          if (res.businesses[count] !== void 0) {
            restaurantArray.push(res.businesses[count]);
            count++;
          } else if (res.businesses[count] === void 0) {
            return;
          }
        }
        if (offset >= 100) {
          break;
        }
      }
      likeBtn = $("<button>").text("Dine!");
      dislikeBtn = $("<button>").text("Dash!");
      likeBtn.off('click').click(function(event) {
        randomSelection();
        var id, name;
        event.preventDefault();
        id = restaurantArray[0].id;
        name = restaurantArray[0].name;
        console.log(id, name);
        // sendInfo(id, name);
      });
      dislikeBtn.off('click').click(function(event) {
        return randomSelection();
      });
      likeBtn.appendTo(restDiv);
      return dislikeBtn.appendTo(restDiv);
    });
  };

  
  // Nearby restaurants search function
  nearbyRestaurants = function() {
    return $.ajax({
      url: `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?latitude=${lat}&longitude=${long}&categories=restaurants&limit=50&offset=${offset}`,
      method: "GET",
      cache: true,
      headers: {
        "Authorization": yelp
      }
    }).then(function(res) {
      var count, dislikeBtn, likeBtn;
      $("#proximity").remove();
      console.log(restaurantArray);
      count = 0;
      while (count <= 50) {
        if (count === 50) {
          offset = offset + 50;
          return delay(1000, function() {
            return nearbyRestaurants();
          });
        } else {
          if (res.businesses[count] !== void 0) {
            restaurantArray.push(res.businesses[count]);
            count++;
          } else if (res.businesses[count] === void 0) {
            return;
          }
        }
        if (offset >= 100) {
          break;
        }
      }
      likeBtn = $("<button>").text("Dine!");
      dislikeBtn = $("<button>").text("Dash!");
      likeBtn.off('click').click(function(event) {
        randomSelection();
        var id, name;
        id = restaurantArray[0].id;
        name = restaurantArray[0].name;
        console.log(id, name);
        sendInfo(id, name);
        return randomSelection();
      });
      dislikeBtn.off('click').click(function(event) {
        return randomSelection();
      });
      likeBtn.appendTo(restDiv);
      return dislikeBtn.appendTo(restDiv);
    });
  };

  
  // Returns a city by using the id stored in mysql. Will want to pull the id from within this function likely
  searchRestaurantsByID = function() {
    return $.ajax({
      url: `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${id}`,
      method: "GET",
      cache: true,
      headers: {
        "Authorization": yelp
      }
    }).then(function(res) {
      return console.log(res);
    });
  };

  
  // Gets photos of the restaurant
  restaurantPhotos = function() {
    return $.ajax({
      url: `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${alias}`,
      method: "GET",
      cache: true,
      headers: {
        "Authorization": yelp
      }
    }).then(function(res) {
      return console.log(res);
    });
  };

  // Gets reviews for the restaurant
  getReviews = function() {
    return $.ajax({
      url: `https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/${alias}/reviews`,
      method: "GET",
      cache: true,
      headers: {
        "Authorization": yelp
      }
    }).then(function(res) {
      return console.log(res);
    });
  };

  // Gets the users current location to make a call to yelp for nearby restaurants
  getCoordinates = function() {
    var error, options, success;
    options = {
      enableHighAccuracy: false,
      timeout: 5000
    };
    error = function(err) {
      return console.log("ERROR(" + err.code + "): " + err.message);
    };
    success = function(position) {
      pos = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      lat = pos.lat;
      long = pos.lng;
      nearbyRestaurants();
      return navigator.geolocation.clearWatch(id);
    };
    // id must be established after it's parameters are listed
    return id = navigator.geolocation.watchPosition(success, error, options);
  };

  // Sets up the ability to use geolocation from google maps
  geolocate = function() {
    return $.ajax({
      url: `https://cors-anywhere.herokuapp.com/https://maps.googleapis.com/maps/api/js?key=${maps}`,
      cache: true,
      method: "GET"
    }).then(function(res) {
      // Gets coordinates and then runs yelp api with the results
      return getCoordinates();
    });
  };

  // Sends the info to be saved to the database for future searches
  sendInfo = function(id, name) {
    return $.post("/api/restaurants", {
      id: id,
      name: name
    }).then(function(res) {
      return console.log(res);
    });
  };

  // Gets the keys from server side
  getKeys = function() {
    return $.get("/api/keys", function(res) {
      yelp = `${res[0]}`;
      return maps = `${res[1]}`;
    });
  };

  // Sets the user's input to local storage in order to repeat search the same city
  // Might be redundant now with the new array method, in this case just move searchRestaurants() directly to the click event
  setCity = function() {
    var cities;
    if ($("#city").val().trim() !== "") {
      window.localStorage.clear();
      city = $("#city").val().trim();
      cities = [];
      cities.push($("#city").val().trim());
      localStorage.setItem("City", JSON.stringify(cities));
      return searchRestaurants();
    } else {
      return alert("You must enter a city! Or select nearby restaurants.");
    }
  };

  // Splices disliked restaurants from the database, and checks their logged date to see if they should re-enter the pool
  dislikedRestaurants = function() {
    return $.ajax({
      url: "/api/disliked",
      cache: true,
      method: "GET"
    }).then(function(res) {
      var count, countTwo, dislikedArray, removedArray, results;
      dislikedArray = res;
      console.log(dislikedArray);
      count = 0;
      countTwo = 0;
      results = [];
      while (count < dislikedArray.length) {
        while (countTwo < restaurantArray.length) {
          if (restaurantArray[countTwo].id === dislikedArray[count].id) {
            removedArray = removedArray + dislikedArray[count].splice();
          }
          countTwo++;
        }
        results.push(count++);
      }
      return results;
    });
  };

  
  // Randomly selects a restaurant from the generated array of restaurants
  randomSelection = function() {
    var random;
    random = Math.floor(Math.random() * restaurantArray.length);
    return selection = restaurantArray.splice(random, 1);
  };

  $(document).ready(function() {
    // Runs immediately to have info available before they start searching, prevents sync timing errors
    getKeys();
    $("#proximity").click(function(event) {
      if (JSON.parse(window.localStorage.getItem("Location Services")) !== true) {
        geoConfirm = confirm("This website is requesting your location to provide you with location based services.");
        if (geoConfirm === true) {
          localStorage.setItem("Location Services", JSON.stringify(geoConfirm));
          restaurantArray = [];
          return geolocate();
        } else if (geoConfirm === false) {
          return alert("Location services were denied, please enter a city.");
        }
      } else if (JSON.parse(window.localStorage.getItem("Location Services")) === true) {
        console.log("clicked and there is affirmation to geolocation");
        restaurantArray = [];
        return geolocate();
      }
    });
    return $("#search").click(function(event) {
      restaurantArray = [];
      event.preventDefault();
      setCity();
      return $("#city").val("");
    });
  });

}).call(this);
